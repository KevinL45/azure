version: "3.3"
services:
  django:
    image: python:3.7
    build: ./django/
    ports:
    - 8000:8000
    command: python ./azure_project_api/manage.py runserver 0.0.0.0:8000
    
  redis:
    image: "alpine:3.17.3"

# https://hub.docker.com/_/microsoft-azure-sql-edge
# https://dev.to/cloudx/running-azure-sql-edge-on-docker-on-macos-m1-3lf5
# https://hevodata.com/learn/sql-server-docker/#:~:text=Docker%20Container%20seamlessly%3A-,SQL%20Server%20Docker%20Setup%3A%20Install%20Docker%20on%20your%20System,your%20SQL%20Server%20Docker%20Instance
  # https://hub.docker.com/_/microsoft-azure-sql-edge
  sql_server:
    # image: mcr.microsoft.com/mssql/server:2022-latest
    image: mcr.microsoft.com/azure-sql-edge
    environment:
      ACCEPT_EULA: "y"
      MSSQL_SA_PASSWORD: "administrator_TEST"
    ports:
    - 1433:1433
    restart: always

  # azure_cli:
  # # https://learn.microsoft.com/en-us/cli/azure/run-azure-cli-docker
  #   image: mcr.microsoft.com/azure-cli
  #   volumes:
  #     - ./deploy_django_azure_project_API.sh:/app/deploy_django_azure_project_API.sh
  #   command: bash app/deploy_django_azure_project_API.sh
    # restart: always

# https://learn.microsoft.com/en-us/azure/container-instances/tutorial-docker-compose
# tests
  # azure-vote-back:
  #   image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
  #   container_name: azure-vote-back
  #   environment:
  #     ALLOW_EMPTY_PASSWORD: "yes"
  #   ports:
  #       - "6379:6379"

  # azure-vote-front:
  #   build: ./azure-voting-app-redis/azure-vote
  #   image: testmachin.azurecr.io/azure-vote-front
  #   container_name: azure-vote-front
  #   environment:
  #     REDIS: azure-vote-back
  #   ports:
  #       - "80:80"
